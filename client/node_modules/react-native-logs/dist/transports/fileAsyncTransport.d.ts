import { transportFunctionType } from "../index";
type RNFS = {
    DocumentDirectoryPath: string;
    documentDirectory: never;
    writeAsStringAsync: undefined;
    appendFile: (filepath: string, contents: string, encoding?: string) => Promise<void>;
};
type EXPOFS = {
    documentDirectory: string | null;
    DocumentDirectoryPath: never;
    writeAsStringAsync: (fileUri: string, contents: string, options?: object) => Promise<void>;
    readAsStringAsync?: (fileUri: string, options?: object) => Promise<string>;
    getInfoAsync?: (fileUri: string, options?: object) => Promise<{
        exists: boolean;
    }>;
    appendFile: undefined;
};
export interface FileAsyncTransportOptions {
    fileNameDateType?: "eu" | "us" | "iso";
    FS: RNFS | EXPOFS;
    fileName?: string;
    filePath?: string;
}
declare const fileAsyncTransport: transportFunctionType<FileAsyncTransportOptions>;
export { fileAsyncTransport };
